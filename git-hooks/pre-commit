#!/usr/bin/env bash
source etkilesim

precommitBaslik="$urtotm_dialogBaslik - pre-commit"

# Testleri çalıştırmadan önce gradlew varlığını yokla
gradlew="$(find $urtotm_projeDizini -name gradlew -type f)"
if [[ -z "$gradlew" ]]; then
	mesajGoster hata "$precommitBaslik" \
		"'gradlew' betiği '$urtotm_projeDizini' dizininde bulunamadığından
		pre-commit kancası iptal oldu. Lütfen gradlew betiğinin bu dizinde
		bulunduğundan emin olup yeniden deneyiniz."
	exit 1
fi

# İşlenen dosyalarda projeye ait çalıştırılabilir kodlar içeren kaynak dosyası varsa
# birim testlerini tetikle
# diff-filter: A (Added), C (Copied), M (Modified)
while read -r dsy; do
	# Test dosyalarını atla
	if [[ "$dsy" == *"Test"* ]]; then
		continue
	fi
	modul="$(basename -- "$dsy")" # Yolları at
	modul="${modul%.*}" # uzantıyı da at
	moduller+=("$modul")
done < <(git diff --cached --name-only --diff-filter=ACM | grep -e'.*\.java' | grep -v '.*Test\.java')

# Bu kancada yalnızca birim (unit) testlerini çalıştır
if [[ "${#moduller[@]}" -ge 1 ]]; then
	birimTestiDizini="${urtotm_projeDizini}/app/src/test"
	for modul in "${moduller[@]}"; do
		echo "Test edilecek modül: $modul"
		# Bu modül için birim testi varlığını yokla
		# ATTENTION! modul uzantıyı barındırmadığı için find ile ararken sonuna bir (*) eklenmezse
		# find hiç sonuç vermez. Şimdilik modül başına yalnızca bir test desteklenir.
		# Bu ileride değişebilir.
		birimTestDosyasi="$(find "$birimTestiDizini" -name "$modul*" -type f | head -1)"
		if [[ -z "$birimTestDosyasi" ]]; then
			# Bu modül için test bulunamadı, sonrakine bak
			echo "'$modul' modülü için birim veya entegrasyon testi bulunamadığından atlanıyor."
			continue
		fi

		paketAdi=$(grep -F package "$birimTestDosyasi")
		# package sözcüğünü ve ; işaretini ele
		paketAdi="${paketAdi//'package '/}"
		paketAdi="${paketAdi//;/}"
		# paket adını modüle birleştir
		modul="${paketAdi}.${modul}"

		# Gradle ile birim testlerini tetikle
		$gradlew :app:testDebugUnitTest --tests "$modul"
		testSonucu=$?
		if [[ "$testSonucu" != "0" ]]; then
			# Herhangi bir testin sonucu başarısız olursa iptal et
			exit "$testSonucu"
		fi
	done
fi
